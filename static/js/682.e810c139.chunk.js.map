{"version":3,"file":"static/js/682.e810c139.chunk.js","mappings":"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","sources":["webpack://finance/./src/components/BasicInput/BasicInput.module.scss?a0ef","components/BasicInput/BasicInput.jsx","webpack://finance/./src/components/LabledInput/LabledInput.module.scss?5340","components/LabledInput/LabledInput.jsx","webpack://finance/./src/pages/OwnPlanPage/OwnPlanPage.module.scss?aef0","webpack://finance/./src/components/PlanInputsList/PlanInputsList.module.scss?e7db","webpack://finance/./src/components/ResultForm/ResultForm.module.scss?b712","webpack://finance/./src/components/ModalAddBalance/ModalAddBalance.module.scss?6dbb","components/ModalAddBalance/ModalAddBalance.jsx","components/ResultForm/ResultForm.jsx","components/PlanInputsList/PlanInputsList.jsx","pages/OwnPlanPage/OwnPlanPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"BasicInput_input__FjvHv\"};","import clsx from 'clsx';\nimport s from './BasicInput.module.scss';\n\nexport const BasicInput = ({ name, className,placeholder, ...props }) => {\n  return (\n    <input\n      id={name}\n      placeholder={placeholder}\n      className={clsx(className, s.input)}\n      type=\"text\"\n      name={name}\n      {...props}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"LabledInput_label__F0cz6\",\"input\":\"LabledInput_input__emeD0\",\"wrapper\":\"LabledInput_wrapper__Rjf3H\"};","import clsx from 'clsx';\nimport { BasicInput } from '../BasicInput/BasicInput';\nimport s from './LabledInput.module.scss';\n\nexport const LabledInput = ({ label, value, className, inputClassName,  placeholder  }) => {\n  return (\n    <div className={clsx(className, s.wrapper)}>\n      <p className={s.label}>{label}</p>\n      <BasicInput\n         placeholder={placeholder}\n        value={value}\n        readOnly={true}\n        className={clsx(inputClassName, s.input)}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"OwnPlanPage_wrapper__1xr2H\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PlanInputsList_form__Oi2eI\",\"list\":\"PlanInputsList_list__ypgOh\",\"item\":\"PlanInputsList_item__haZo6\",\"description\":\"PlanInputsList_description__5JXSL\",\"prevPlanButton\":\"PlanInputsList_prevPlanButton__6jPZy\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ResultForm_wrapper__GVqQC\",\"innerWrapper\":\"ResultForm_innerWrapper__X719Z\",\"btnWrapper\":\"ResultForm_btnWrapper__yKx9u\",\"title\":\"ResultForm_title__-zEMh\",\"input\":\"ResultForm_input__4mXu1\",\"firstInput\":\"ResultForm_firstInput__P9nkK\",\"secondInput\":\"ResultForm_secondInput__JhjkP\",\"submitButton\":\"ResultForm_submitButton__sA3PT\"};","// extracted by mini-css-extract-plugin\nexport default {\"btnBox\":\"ModalAddBalance_btnBox__1pmKy\"};","import { BasicInput } from 'components/BasicInput/BasicInput';\nimport { Button } from 'components/Button/Button';\nimport Modal from 'components/Modal/Modal';\nimport s from './ModalAddBalance.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { getBalanceUser } from 'redux/Auth/authOperations';\n\nexport const ModalAddBalance = ({ show, onClose }) => {\n  const dispatch = useDispatch();\n  const addBalance = value => {\n    dispatch(getBalanceUser(Number(value)));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const input = form.elements.input.value;\n    form.reset();\n    addBalance(input);\n    onClose();\n  };\n\n  return (\n    <Modal show={show} showCloseBtn={true} onClose={onClose}>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <BasicInput name=\"input\" placeholder=\"Enter balance\" />\n        <div className={s.btnBox}>\n          <Button variant=\"primary\" type=\"submit\">\n            Add\n          </Button>\n          <Button variant=\"secondary\" onClick={onClose}>\n            Cancel\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Button } from 'components/Button/Button';\nimport { LabledInput } from 'components/LabledInput/LabledInput';\nimport s from './ResultForm.module.scss';\nimport { ModalAddBalance } from 'components/ModalAddBalance/ModalAddBalance';\nimport { usePopup } from 'hooks/usePopup';\nimport { getBalanceStatus } from 'redux/Auth/authSelectors';\n\nconst ResultForm = ({ title, year, month, onClick }) => {\n  const { show, showPopup, closePopup } = usePopup();\n  const balance = useSelector(getBalanceStatus);\n\n  return (\n    <div className={s.wrapper}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <div className={s.innerWrapper}>\n        <LabledInput\n          label=\"Number of years\"\n          placeholder=\"0 year\"\n          value={year && `${year} years`}\n          className={s.firstInput}\n          inputClassName={s.input}\n        />\n        <LabledInput\n          label=\"Number of months\"\n          value={month && `${month} months`}\n          placeholder=\"0 month\"\n          className={s.secondInput}\n          inputClassName={s.input}\n        />\n        <div className={s.btnWrapper}>\n          <Button\n            onClick={onClick}\n            variant=\"neutral\"\n            type=\"submit\"\n            className={s.submitButton}\n          >\n            Fits\n          </Button>\n          <Button variant=\"link\" onClick={showPopup} disabled={balance}>\n            Add Balance\n          </Button>\n        </div>\n      </div>\n      <ModalAddBalance show={show} onClose={closePopup} />\n    </div>\n  );\n};\n\nexport default ResultForm;\n","import Input from 'components/Input/Input';\nimport style from './PlanInputsList.module.scss';\n\nimport { Button } from 'components/Button/Button';\nimport ResultForm from 'components/ResultForm/ResultForm';\n\nimport { useDispatch } from 'react-redux';\nimport {\n  selectYear,\n  selectMonth,\n  selectPersonalPlan,\n} from 'redux/PersonalPlan/personalPlanSelectors';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useSelector } from 'react-redux';\nimport {\n  postPersonalPlanPre,\n  postPersonalPlan,\n  putPersonalPlan,\n} from 'redux/PersonalPlan/personalPlanOperations';\n\nimport { useEffect } from 'react';\n\nconst validation = yup\n  .number('It`s must be a number')\n  .required('This line is required')\n  .positive('It`s must be a positive number')\n  .integer('It`s must be a integer');\n\nconst initialValues = {\n  salary: '',\n  passiveIncome: '',\n  savings: '',\n  cost: '',\n  footage: '',\n  procent: '',\n  month: '',\n  year: '',\n};\n\nconst PlanInputsList = () => {\n  const dispatch = useDispatch();\n\n  const plan = useSelector(selectPersonalPlan);\n  const year = useSelector(selectYear);\n  const month = useSelector(selectMonth);\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: yup.object({\n      salary: validation,\n      passiveIncome: validation,\n      savings: validation,\n      cost: validation,\n      footage: validation,\n      procent: validation.max(100),\n    }),\n\n    onSubmit: values => {\n      const { salary, passiveIncome, savings, cost, footage, procent } = values;\n      dispatch(\n        postPersonalPlanPre({\n          salary: Number(salary),\n          passiveIncome: Number(passiveIncome),\n          savings: Number(savings),\n          cost: Number(cost),\n          footage: Number(footage),\n          procent: Number(procent),\n        })\n      );\n    },\n  });\n\n  const handleClick = () => {\n    if (!plan._id) {\n      const { salary, passiveIncome, savings, cost, footage, procent } = plan;\n      dispatch(\n        postPersonalPlan({\n          salary,\n          passiveIncome,\n          savings,\n          cost,\n          footage,\n          procent,\n        })\n      );\n      return;\n    } else {\n      const { salary, passiveIncome, savings, cost, footage, procent } =\n        formik.values;\n      dispatch(\n        putPersonalPlan({\n          salary,\n          passiveIncome,\n          savings,\n          cost,\n          footage,\n          procent,\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    formik.setValues(plan);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plan]);\n\n  return (\n    <form className={style.form} onSubmit={formik.handleSubmit}>\n      <ul className={style.list}>\n        <li className={style.item}>\n          <Input\n            id=\"salary\"\n            name=\"salary\"\n            value={formik.values.salary}\n            placeholder=\"30 000\"\n            label=\"1. RFP of both spouses, &#8372;\"\n            onChange={formik.handleChange}\n          />\n          {formik.submitCount > 0 && formik.errors.salary && (\n            <p style={{ color: 'red' }}>{formik.errors.salary}</p>\n          )}\n        </li>\n        <li className={style.item}>\n          <Input\n            id=\"passiveIncome\"\n            name=\"passiveIncome\"\n            value={formik.values.passiveIncome}\n            placeholder=\"Enter text\"\n            label=\"2. Passive income, months, &#8372;\"\n            onChange={formik.handleChange}\n          />\n          {formik.submitCount > 0 && formik.errors.passiveIncome && (\n            <p style={{ color: 'red' }}>{formik.errors.passiveIncome}</p>\n          )}\n        </li>\n        <li className={style.item}>\n          <Input\n            id=\"savings\"\n            name=\"savings\"\n            value={formik.values.savings}\n            placeholder=\"Enter text\"\n            label=\"3. Savings, &#8372;\"\n            onChange={formik.handleChange}\n          />\n          {formik.submitCount > 0 && formik.errors.savings && (\n            <p style={{ color: 'red' }}>{formik.errors.savings}</p>\n          )}\n        </li>\n        <li className={style.item}>\n          <Input\n            id=\"cost\"\n            name=\"cost\"\n            value={formik.values.cost}\n            placeholder=\"900 000\"\n            label=\"4. Specify the cost of your future apartment, &#8372;\"\n            onChange={formik.handleChange}\n          />\n          {formik.submitCount > 0 && formik.errors.cost && (\n            <p style={{ color: 'red' }}>{formik.errors.cost}</p>\n          )}\n        </li>\n        <li className={style.item}>\n          <Input\n            id=\"footage\"\n            name=\"footage\"\n            value={formik.values.footage}\n            placeholder=\"Enter text\"\n            label=\"5. Specify the number of sq.m. of your future apartment\"\n            onChange={formik.handleChange}\n          />\n          {formik.submitCount > 0 && formik.errors.footage && (\n            <p style={{ color: 'red' }}>{formik.errors.footage}</p>\n          )}\n        </li>\n        <li className={style.item}>\n          <Input\n            id=\"procent\"\n            name=\"procent\"\n            value={formik.values.procent}\n            placeholder=\"Enter text\"\n            label=\"6. Accumulation, %\"\n            onChange={formik.handleChange}\n          />\n          {formik.submitCount > 0 && formik.errors.procent && (\n            <p style={{ color: 'red' }}>{formik.errors.procent}</p>\n          )}\n          <p className={style.description}>\n            Specify the percentage that you would like to accumulate per month\n            from the total amount of income and you will see when you reach the\n            goal\n          </p>\n        </li>\n      </ul>\n      {!plan._id && (\n        <Button type=\"submit\" className={style.prevPlanButton}>\n          Pre Plan\n        </Button>\n      )}\n      <ResultForm\n        title=\"You will have an apartment in:\"\n        year={year}\n        month={month}\n        onClick={handleClick}\n      />\n    </form>\n  );\n};\nexport default PlanInputsList;\n","import style from './OwnPlanPage.module.scss';\nimport PlanInputsList from 'components/PlanInputsList/PlanInputsList';\n\nimport { useDispatch } from 'react-redux';\n\nimport { getPersonalPlan } from 'redux/PersonalPlan/personalPlanOperations';\n\nimport { useEffect } from 'react';\n\nconst OwnPlanPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n   setTimeout(() => {\n     dispatch(getPersonalPlan());\n   }, 0);\n  }, [dispatch]);\n\n  return (\n    <div className={style.wrapper}>\n      <div className=\"container\">\n        <PlanInputsList />\n      </div>\n    </div>\n  );\n};\n\nexport default OwnPlanPage;\n"],"names":["BasicInput","name","className","placeholder","props","id","clsx","s","type","LabledInput","label","value","inputClassName","readOnly","ModalAddBalance","show","onClose","dispatch","useDispatch","Modal","showCloseBtn","action","onSubmit","e","preventDefault","form","currentTarget","input","elements","reset","getBalanceUser","Number","Button","variant","onClick","title","year","month","usePopup","showPopup","closePopup","balance","useSelector","getBalanceStatus","disabled","validation","yup","required","positive","integer","initialValues","salary","passiveIncome","savings","cost","footage","procent","plan","selectPersonalPlan","selectYear","selectMonth","formik","useFormik","validationSchema","max","values","postPersonalPlanPre","useEffect","setValues","style","handleSubmit","Input","onChange","handleChange","submitCount","errors","color","_id","putPersonalPlan","postPersonalPlan","setTimeout","getPersonalPlan"],"sourceRoot":""}